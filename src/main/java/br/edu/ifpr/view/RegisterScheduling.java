/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.ifpr.view;

import java.util.Calendar;
import java.util.Date;
import javax.swing.SpinnerDateModel;
import br.edu.ifpr.dao.WorkshopDAO;
import br.edu.ifpr.dao.VehicleDAO;
import br.edu.ifpr.dao.ServiceDAO;

import br.edu.ifpr.model.entity.Workshop;
import br.edu.ifpr.model.entity.Vehicle;
import br.edu.ifpr.model.entity.Service;

import br.edu.ifpr.controller.SchedulingController;
import br.edu.ifpr.controller.ValidationException;

import javax.swing.*;
import javax.swing.event.*;
import java.util.*;
import java.time.*;

/**
 *
 * @author rafae
 */
public class RegisterScheduling extends javax.swing.JDialog {

    private final SchedulingController controller = new SchedulingController();

    /**
     * Creates new form RegisterScheduling
     */
    public RegisterScheduling(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadCombos();
        configureSpinners();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbWorkshop = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbVehicle = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbService = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        sDate = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        sTime = new javax.swing.JSpinner();
        btnRegister = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblEndTime = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tfId = new javax.swing.JTextField();
        lId = new javax.swing.JLabel();
        spScheduling = new javax.swing.JScrollPane();
        tbScheduling = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendar Serviço");

        jLabel1.setText("Oficina:");

        jLabel2.setText("Veículos:");

        jLabel3.setText("Serviço:");

        jLabel4.setText("Data:");

        jLabel5.setText("Hora:");

        btnRegister.setText("Cadastrar");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnCancel.setText("Sair");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblEndTime.setText("Término: --:--");

        btnEdit.setText("Editar");

        btnSave.setText("Salvar");
        btnSave.setEnabled(false);

        btnDelete.setText("Excluir");

        tfId.setEnabled(false);

        lId.setText("ID:");

        tbScheduling.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spScheduling.setViewportView(tbScheduling);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spScheduling, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblEndTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbWorkshop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(cbVehicle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbService, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sTime, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegister)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnDelete, btnEdit, btnRegister, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lId)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbWorkshop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(sTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEndTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnCancel)
                    .addComponent(btnEdit)
                    .addComponent(btnSave)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spScheduling, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancel, btnDelete, btnEdit, btnRegister, btnSave});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:

        var w = (br.edu.ifpr.model.entity.Workshop) cbWorkshop.getSelectedItem();
        var v = (br.edu.ifpr.model.entity.Vehicle) cbVehicle.getSelectedItem();
        var s = (br.edu.ifpr.model.entity.Service) cbService.getSelectedItem();
        var start = getSelectedDateTime();
        try {
            var saved = controller.create(w, v, s, start);
            int opt = javax.swing.JOptionPane.showConfirmDialog(
                    this,
                    "Agendamento salvo (id: " + saved.getId() + ").\nCadastrar outro?",
                    "Sucesso",
                    javax.swing.JOptionPane.YES_NO_OPTION,
                    javax.swing.JOptionPane.INFORMATION_MESSAGE
            );
            if (opt == javax.swing.JOptionPane.YES_OPTION) {
                clearForm();
            } else {
                dispose();
            }
        } catch (br.edu.ifpr.controller.ValidationException ve) {
            javax.swing.JOptionPane.showMessageDialog(this, ve.getMessage(), "Validação", javax.swing.JOptionPane.WARNING_MESSAGE);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao salvar: " + ex.getMessage(), "Erro", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterScheduling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterScheduling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterScheduling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterScheduling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegisterScheduling dialog = new RegisterScheduling(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void configureSpinners() {
        sDate.setModel(new SpinnerDateModel(new Date(), null, null, Calendar.DAY_OF_MONTH));
        var dateEditor = new javax.swing.JSpinner.DateEditor(sDate, "dd/MM/yyyy");
        sDate.setEditor(dateEditor);

        Calendar c = Calendar.getInstance();
        c.set(Calendar.HOUR_OF_DAY, 8);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MILLISECOND, 0);
        sTime.setModel(new SpinnerDateModel(c.getTime(), null, null, Calendar.MINUTE));
        var timeEditor = new javax.swing.JSpinner.DateEditor(sTime, "HH:mm");
        sTime.setEditor(timeEditor);
    }

    private void loadCombos() {
        WorkshopDAO wdao = new WorkshopDAO();
        VehicleDAO vdao = new VehicleDAO();
        ServiceDAO sdao = new ServiceDAO();

        try {

            var mw = new DefaultComboBoxModel<Workshop>();
            for (Workshop w : wdao.findAll()) {
                mw.addElement(w);
            }
            cbWorkshop.setModel(mw);
            cbWorkshop.setSelectedIndex(-1);
            cbWorkshop.setRenderer(new DefaultListCellRenderer() {
                @Override
                public java.awt.Component getListCellRendererComponent(
                        JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                    var c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    if (value instanceof Workshop w) {
                        setText(w.getName() + " (vagas/dia: " + w.getVacanciesDay() + ")");
                    }
                    return c;
                }
            });

            var mv = new DefaultComboBoxModel<Vehicle>();
            for (Vehicle v : vdao.findAll()) {
                mv.addElement(v);
            }
            cbVehicle.setModel(mv);
            cbVehicle.setSelectedIndex(-1);
            cbVehicle.setRenderer(new DefaultListCellRenderer() {
                @Override
                public java.awt.Component getListCellRendererComponent(
                        JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                    var c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    if (value instanceof Vehicle v) {
                        setText(v.getLicensePlate() + " - " + v.getModel());
                    }
                    return c;
                }
            });

            var ms = new DefaultComboBoxModel<Service>();
            for (Service s : sdao.findAll()) {
                ms.addElement(s);
            }
            cbService.setModel(ms);
            cbService.setSelectedIndex(-1);
            cbService.setRenderer(new DefaultListCellRenderer() {
                @Override
                public java.awt.Component getListCellRendererComponent(
                        JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                    var c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    if (value instanceof Service s) {
                        setText(s.getDescription() + " (" + s.getDurationMin() + " min)");
                    }
                    return c;
                }
            });
        } finally {
            vdao.close();
            wdao.close();
            sdao.close();
        }
    }

    private void wireEvents() {
        cbService.addActionListener(e -> updateEndTimePreview());
        sDate.addChangeListener(e -> updateEndTimePreview());
        sTime.addChangeListener(e -> updateEndTimePreview());

        updateEndTimePreview();
    }

    private void updateEndTimePreview() {
        var s = (Service) cbService.getSelectedItem();
        if (s == null) {
            lblEndTime.setText("Término: --:--");
            return;
        }
        LocalDateTime start = getSelectedDateTime();
        LocalDateTime end = start.plusMinutes(s.getDurationMin());
        lblEndTime.setText("Término: " + end.toLocalTime().toString()); // HH:MM
    }

    private LocalDateTime getSelectedDateTime() {
        Date d = (Date) sDate.getValue();
        Date t = (Date) sTime.getValue();
        ZoneId z = ZoneId.systemDefault();
        LocalDate ld = d.toInstant().atZone(z).toLocalDate();
        LocalTime lt = t.toInstant().atZone(z).toLocalTime().withSecond(0).withNano(0);
        return LocalDateTime.of(ld, lt);
    }

    private void clearForm() {
        cbWorkshop.setSelectedIndex(-1);
        cbVehicle.setSelectedIndex(-1);
        cbService.setSelectedIndex(-1);
        configureSpinners();     // volta para 08:00 de hoje
        updateEndTimePreview();
        cbWorkshop.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<br.edu.ifpr.model.entity.Service> cbService;
    private javax.swing.JComboBox<br.edu.ifpr.model.entity.Vehicle> cbVehicle;
    private javax.swing.JComboBox<br.edu.ifpr.model.entity.Workshop> cbWorkshop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lId;
    private javax.swing.JLabel lblEndTime;
    private javax.swing.JSpinner sDate;
    private javax.swing.JSpinner sTime;
    private javax.swing.JScrollPane spScheduling;
    private javax.swing.JTable tbScheduling;
    private javax.swing.JTextField tfId;
    // End of variables declaration//GEN-END:variables
}
